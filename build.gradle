buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.0.0"
    }
}

apply plugin: 'io.ratpack.ratpack-java'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'scala'

compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

compileGroovy {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
}

dependencies {
    compile 'io.ratpack:ratpack-guice:1.0.0'
    compile 'net.jpountz.lz4:lz4:1.3'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-compress:1.10'
    compile 'com.vividsolutions:jts:1.13'
    compile 'javax.inject:javax.inject:1'
    compile 'de.grundid.opendatalab:geojson-jackson:1.5'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'com.ning:async-http-client:1.9.31'

    runtime 'org.slf4j:slf4j-simple:1.7.12'

    testCompile 'org.testng:testng:6.9.4'
    testCompile 'org.assertj:assertj-core:3.1.0'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

    testCompile "io.gatling.highcharts:gatling-charts-highcharts:2.1.7"
}

task gatling(dependsOn: 'compileTestScala') << {
    logger.lifecycle(" ---- Executing all Gatling scenarios from: ${sourceSets.test.output.classesDir} ----")
    sourceSets.test.output.classesDir.eachFileRecurse { file ->
        if (file.isFile()) {
            //Remove the full path, .class and replace / with a .
            logger.debug("Tranformed file ${file} into")
            def gatlingScenarioClass = (file.getPath() - (sourceSets.test.output.classesDir.getPath() + File.separator) - '.class')
                    .replace(File.separator, '.')

            logger.debug("Tranformed file ${file} into scenario class ${gatlingScenarioClass}")
            javaexec {
                // I do not use this so
                main = 'io.gatling.app.Gatling'
                classpath = sourceSets.test.output + sourceSets.test.runtimeClasspath
                args '-bf',
                        sourceSets.test.output.classesDir,
                        '-s',
                        gatlingScenarioClass,
                        '-rf',
                        'build/reports/gatling'
            }
        }
    }

    logger.lifecycle(" ---- Done executing all Gatling scenarios ----")
}

mainClassName = "de.bitkings.nitram509.elevation.ElevationServerApplication"